1) Which of these components mount volumes to containers?

Correct

Correct answer
kubelet

Explanation
The kubelet which runs on nodes handles moment-to-moment management of the pods on its node.




2) What controls a Kubernetes cluster?

Correct

Correct answer
The Master

Explanation
The master node contains the Kubernetes api server, which controls what the cluster does.




3) What is the difference between a Docker volume and a Kubernetes volume?

Correct

Correct answer
Volume lifetimes. In Docker, this is loosely defined. In Kubernetes, the volume has the same lifetime as its surrounding pod.

Explanation
Docker volumes are not used in conjunction with Kubernetes at this time.




4) Containers are run on which of these?

Correct

Correct answer
Nodes

Explanation
Nodes run the pods.




5) Communications between the apiserver and the kubelet on the cluster nodes are used for all but which of the following?

Correct

Correct answer
Keep-alive xml packets

Explanation
Communications between the apiServer and the Kubelet are constantly communicating for a variety of purposes.




6) Which of these is a list of common Kubernetes primitives?

Correct

Correct answer
pod, service, persistentVolume, deployment

Explanation
There are many others, but those are the ones you'll likely work with most often.




7) In a typical deployment, the Kubernetes Master listens on what port number?

Correct

Correct answer
443

Explanation
The API server, by default, listens on port 443, the secure HTTP port.




8) The connection between the apiserver and nodes, pods and services:

Correct

Correct answer
Is unencrypted and therefore unsafe to run over public networks.

Explanation
It's a fairly simple process to encrypt the streams using TLS.




9) In Kubernetes, a group of one or more containers is called:

Correct

Correct answer
A pod

Explanation
A pod is usually one container but can be a group of containers working together.




10) Kubernetes changed the name of cluster members to "Nodes." What were they called before that?

Correct

Correct answer
Minions

Explanation
A lot of documentation and tutorials online still refer to worker nodes this way.




11) What does a pod represent in a Kubernetes cluster?

Correct

Correct answer
A running process

Explanation
Pods are the running containers in a Kubernetes cluster.




12) If memory is running low on a running node, which of these keys will return "True"?

Correct

Correct answer
MemoryPressure

Explanation
MemoryPressure and DiskPressure return true as a node starts to become overcommitted.




13) Which of these are not inherently created by Kubernetes?

Correct

Correct answer
Nodes

Explanation
Nodes are added to a cluster, and a Kubernetes object is created to reflect them, but Kubernetes itself doesn't create them.




14) Unique IP addresses are assigned to:

Correct

Correct answer
Pods

Explanation
A pod gets assigned a single IP address, regardless of how many containers make it up. This is analogous to many services running on a single virtual machine.




15) Usually, when submitting a Kubernetes API call, data is sent in which format? (Select all that apply)

Correct

Correct answer
JSON, YAML

Explanation
If using a direct API call in an application, JSON is used. If using kubectl to submit a request, it takes YAML.




1) Which of these is not a CNI provider?

Correct

Correct answer
Ceph

Explanation
Ceph is an object store, the other three are CNI providers.




2) What is the node called that runs the apiserver?

Correct

Correct answer
The Master

Explanation
The Master node runs the apiserver and is where Kubernetes accepts requests via a RESTful API.


420/

3) What do many Kubernetes deployment tools handle automatically for you?

Correct

Correct answer
Certificate creation

Explanation
Most deployment tools handle the certificate creation but will not do the other things.


420/

4) Which types of API requests should be authenticated?

Correct

Correct answer
All of them

Explanation
Everything, every time. Don't allow security holes in your cluster!


420/

5) What is the default encryption used in Kubernetes? (Choose the answer that is most correct.)

Correct

Correct answer
TLS

Explanation
TLS is the default encryption used in Kubernetes.




6) Which platform(s) will Minikube run on? (Select all that apply)

Correct

Correct answer
Linux, Windows, Mac OS X

Explanation
And probably, just for spite, someone will port it to Novell Netware so we'll have to change this question, but Minikube should run just about anywhere.




7) Which of these is an inexpensive and easy way to try out Kubernetes?

Correct

Correct answer
Minikube

Explanation
Minikube is a great and inexpensive way to try out Kubernetes.




8) What underlying technology does Flannel use to allow pods to communicate?

Correct

Correct answer
VxLANs

Explanation
Flannel uses VxLANs for the overlay network among the pods.


420/

9) For network policies to work in Kubernetes, which of these must be true?

Incorrect

Correct answer
The CNI must enforce the network policies.

Explanation
If the CNI doesn't support network policies, then applying a YAML formula with a network policy in it will return a success, but the policies will not be enforced.


418/

10) To deploy Kubernetes using kubeadm, you'll have to choose:

Correct

Correct answer
An appropriate CNI (Container Network Interface)

Explanation
kubeadm doesn't make any provisions for inter-node networking. There are a lot of CNIs to choose from!




11) In Kubernetes, one of the primitives is a Node (which was formerly referred to as a "Minion"). What does it represent?

Correct

Correct answer
A physical or virtual machine running the Kubelet and doing the compute work via a container service like Docker or Rocket.

Explanation
While nodes are generally considered to be physical machines, as that's the norm in production deployments, they can be virtual machines as well.


420/

12) How is authorization handled in Kubernetes?

Correct

Correct answer
A built-in Role Based Access Control system.

Explanation
K8s has its own RBAC components built it.


418/

1) How can a user specify which scheduler a pod should use?

Correct

Correct answer
Through the schedulerName tag in the spec.

Explanation
The tag for specifying a particular scheduler is schedulerName and defaults to default-scheduler.



2) If a toleration and a taint match during scheduling, what happens?

Correct

Correct answer
The taint is ignored and the pod might be scheduled to the node.

Explanation
Taints and tolerations work together to ensure that pods are not scheduled onto inappropriate nodes. One or more taints are applied to a node; this marks that the node should not accept any pods that do not tolerate the taints. Tolerations are applied to pods, and allow (but do not require) the pods to schedule onto nodes with matching taints.


428/

3) Why might a user desire two pods to have anti-affinity?

Correct

Correct answer
She wants them to run on different nodes to avoid sharing failure domains.

Explanation
Anti-affinity means that two pods will not run on the same node, and is usually implemented to prevent two pods from being in the same failure domain in case something goes wrong.


428/

4) What is the scheduler?

Correct

Correct answer
A pod on the master node.

Explanation
The scheduler is a process that runs in a pod, usually on the master node. While it's unusual, it's possible to have multiple schedulers running on the same cluster.


428/

5) If a pod requests more resources than is available on any given node, what happens?

Correct

Correct answer
The pod will not be scheduled until a node with the resources becomes available.

Explanation
The pod will remain in a "Pending" status until a node becomes available -- which might be never.


428/

6) What is podAffinity used for?

Correct

Correct answer
Placing two or more pods on the same node.

Explanation
Placing two or more pods on the same node is done with the podAffinity attribute and uses labels.


428/

7) Why are annotations particularly important when using multiple or custom schedulers?

Correct

Correct answer
Because they can remind operators which scheduler was used to place (or fail to place) a pod.

Explanation
Annotations are designed to provide additional non-identifying information about a pod, and things like application version or scheduler that placed the pod are ideal uses for these.


//.com/cp/exercises/view/id/669/module/155

8) How can a pod be assigned to a specific node?

Correct

Correct answer
Using a nodeSelector with properly labelled nodes.

Explanation
Using the nodeSelector is the easiest way to manually assign pods to nodes.


430/

9) When an API request is made to create a pod, which piece determines which node will be used to instantiate the new pod?

Correct

Correct answer
The scheduler

Explanation
The scheduler is what determines which pods go with which nodes.


428/

10) What are taints and what are they applied to?

Correct

Correct answer
Taints are used to repel certain pods from nodes and are applied to nodes.

Explanation
Taints allow a node to repel a set of pods.


428/



1) Is it possible to get the logs back from a dead or evicted pod? If so, how?

Correct

Correct answer
Yes, add the --previous flag to the kubectl logs command.

Explanation
To grab the last logs, just add --previous!



2) Which command will give you stdout of a pod called "to-the-screen"?

Correct

Correct answer
kubectl logs to-the-screen

Explanation
kube logs is the fastest way to get stdout and the recommended, standard way to configure your applications in containers to handle their logs.




3) I'm troubleshooting an application issue and would love to see the application's logs, which are in a file in the container "appctn" in the pod "apppod-abcdef123-45678" at /var/log/applog. Which of these commands would list that for me?

Correct

Correct answer
kubectl exec apppod-abcdef123-45678 -- cat /var/log/applog

Explanation
kubectl logs only work for STDOUT, so if your logs are elsewhere, you'll need to pull them with something like the command here.



4) Where does the Kubernetes key/value store (etcd) log file reside?

Correct

Correct answer
On the host in /var/log/pods

Explanation
The Kubernetes services that run in pods on the host store their logs in /var/log/pods




5) What's the recommended method for dealing with applications that insist on writing out logs to a file rather than being able to redirect them to stdout?

Correct

Correct answer
Find a logging agent that can operate inside the pod and send the logs to a central file store or log aggregator.

Explanation
It's usually a fairly easy task to incorporate a logging handler and central location for log files within the cluster.


6) Starting with Kubernetes 1.8, there is a new metrics API. This can be accessed directly from the command line with which command?

Correct

Correct answer
kubectl top [nodes | pods]

Explanation
kubectl top, along with the object you'd like to watch, gives some in-depth information right on the command line. Who needs a GUI?




7) I have a node called "node8" and I'd like to know what kind of load it's under including the CPU and Memory requests. Which of these commands would give me that information?

Correct

Correct answer
kubectl describe node node8

Explanation
kubectl describe node will give you all kinds of very useful up to date information about a given node.




8) What's an easy command to check the health and status of your cluster?

Correct

Correct answer
kubectl get nodes

Explanation
Kubectl get nods will show you at a glance which of your nodes are ready and which might be having troubles. It's a great first stop if you suspect trouble.




9) Which log command will show you just the final 8 lines of stdout for a pod?

Correct

Correct answer
kubectl logs --tail=8

Explanation
Two hyphens and an equal, unless you want exactly ten lines, then it's just kubectl logs --tail



10) Is it possible to get a shell prompt to a Ubuntu 16.04 based container called "sidecar1" in the pod "star-aaaaaaaaaa-bbbbb"? There are several containers in the pod. If so, how?

Correct

Correct answer
Yes! kubectl exec -it star-aaaaaaaaaa-bbbbb --container sidecar1 -- /bin/bash

Explanation
While it's discouraged in Kubernetes, it's still possible to get to a container's shell. It's generally considered a bad idea to do things like alter configuration files or apt-get files while logged in. Its use should be limited to debugging when possible.


1) What determines how a set of pods are allowed communicate with one another and other network endpoints?

Correct

Correct answer
Network Policies

Explanation
Network policies determine what traffic gets into and out of a pod. The CNI must support them, though, but most of them do.
 
2) When a service type of "ClusterIP" is used, what is the result?

Correct

Correct answer
A single IP address within the cluster that redirects traffic to a pod (possibly on a different node) serving the application (the pod).

Explanation
ClusterIP is most commonly used with third-party load balancers.

 
3) Think about the YAML for a network policy. If you had to create one, what is the pattern?

Correct

Correct answer
Preamble, podSelector, ingress, and/or egress rules

Explanation
Preamble contains apiVersion, Kind, and Metadata; then comes the podSelector to determine which pods this policy oversees; and, finally, the rules.

 
4) For a user to be able to request an Ingress resource, what must the cluster have?

Correct

Correct answer
An Ingress controller compatible with available and appropriate service providers like load balancers.

Explanation
With Kubernetes, the general rule of thumb is that YAML requests will return successfully, but if there is no service to fulfill it then the request will have no effect.
 
5) If a service called "web-head" is exposed in the default namespace, then other pods can resolve it using all of these hostnames except which?

Correct

Correct answer
web-head.local

Explanation
The .local won't work!
 
6) Ingress is fairly new to the Kubernetes stack. What version number was the first one to include it?

Correct

Correct answer
1.1

Explanation
v1.1 of Kubernetes included the Ingress API object and it's been constantly improved and increasingly used ever since.

 
7) What is required to specify a service type of "LoadBalancer"?

Correct

Correct answer
A cloud provider that supports Kubernetes-provisioned load balancers.

Explanation
The "LoadBalancer" service type only works on cloud providers that support it. Minikube will also allow it but does not create a full, production-quality load balancer.

 
8) What handles inter-pod communication?

Correct

Correct answer
The CNI

Explanation
The CNI (Container Network Interface) allows pods to communicate with one another within a cluster regardless of which node they are on.

 
9) If an Ingress request is made with no associated rules, what happens?

Correct

Correct answer
All traffic is sent to a single host.

Explanation
This is a useful way of setting up common error pages, such as the location of a unified 404 page.
 
10) What is an Ingress as it relates to Kubernetes?

Correct

Correct answer
An API object that manages external access to the services in a cluster, usually HTTP.

Explanation
A fairly new concept in Kubernetes, an Ingress allows us to abstract away the implementation details of routes into the cluster, such as Load Balancers.




 1) Which of the following is true about a volume?

Correct

Correct answer
Regardless of which access modes a volume supports, it can only support one at a time.

Explanation
For example, if a volume is mounted as ReadOnlyMany in one pod, then another pod may not mount it in ReadWriteMany, even if it is supported by the volume type.

 
2) What are the access modes that can be requested for a volume?

Correct

Correct answer
ReadWriteOnce, ReadOnlyMany, ReadWriteMany

Explanation
Access modes are in terms of how many pods can read or write to a volume simultaneously.

 
3) A PersistentVolume is a cluster storage resource, but what is a PersistentVolumeClaim?

Correct

Correct answer
A user request for a storage resource

Explanation
The PVC request gets matched with a PV.

 
4) What is the lifecycle of PVs and PVCs?

Correct

Correct answer
Provision, Bind, Use, Reclaim

Explanation
First, the administrator provisions the resource or sets it up to be dynamically allocated. Next, when a PVC comes in, it's bound to a PV and used. Once the resource is removed, it's reclaimed according to the reclaim policies.

 
5) PersistentVolumes (PVs) are cluster storage resources. How do they access different kinds of physical storage from different vendors?

Correct

Correct answer
Plug-ins

Explanation
There are many different plug-ins in Kubernetes, and there's even FlexVolumes for plug-ins written by vendors but not added to the K8s repositories.

 
6) What is ephemeral storage?

Correct

Correct answer
Local storage on the node used for containers. Its contents are removed when the pod is deleted.

Explanation
Ephemeral storage is used to run containers on local nodes.
 
 
 1) What is a Pod Security Policy?
Correct

Correct answer
A cluster-level resource that controls security sensitive aspects of the pod specification.

Explanation
The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system, as well as defaults for the related fields. They allow an administrator to control many aspects of the pod.

 

2) At which levels can you apply security contexts? (Select all that apply)
Correct

Correct answer
Container, Pod

Explanation
Containers and pods can have security contexts.
 

3) Frank is signed in to his Kubernetes cluster and needs a few additional permissions that he does not currently possess to make his application work. How can he accomplish this?
Correct

Correct answer
He must seek an administrator that has the permissions he needs to get a role created with those permissions.

Explanation
A user cannot escalate his or her own permissions. If a user does not have a given permissions, he or she cannot create a role with those permissions or grant someone else those permissions.
 

4) Security context settings for a pod include all of the following except
Correct

Correct answer
SecureImage

Explanation
Security contexts for pods allow a lot of specificities but not whether or not the image is secure.

 

5) How could an administrator limit what a particular user could and could not do in a particular namespace?
Correct

Correct answer
Configure a new role in the user's namespace with the appropriate rules, then bind the role to the user subject.

Explanation
Roles are API objects, and you don't want to use a ClusterRole for this one since we're specifying a particular namespace. Roles apply to subjects, which can be groups, users, or service accounts.
 

6) Which of these types of calls should be authenticated and authorized?
Correct

Correct answer
All of these

Explanation
Everything should be authenticated and authorized. It is not required but should be skipped only with very good reason.


